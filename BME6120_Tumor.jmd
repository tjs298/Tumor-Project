```julia
function cancer_sim(generations)
Normal=1
Death=.20
Mut1=.05
Mut2=.015
genes=5
driver=3
n=1
d=0
#an initial random vector 
R=rand(genes)
for i in 1:generations
    #d=0
    #code runs through all existing cells and determines cell fate
    for j in 1:n
        sum=0
        #the code runs through every driver gene and discerns the contribution towards cell fate
        for k in 1:driver
            if R[k] > Death
                sum=sum+0
            elseif R[k] <= Death && R[k] > Mut1
                sum=sum+6
            elseif R[k] <= Mut1 && R[k] > Mut2
                sum=sum+1
            else
                sum=sum+3
            end
        end
        #the below code culminates the gene variables above and discerns the cell fate
        if sum<=0
            n=n+1
            d=d+1
        elseif sum>0 && sum<=3
            n=n+2
            d=d+1
        elseif sum>3 && sum<6
            n=n+3
            d=d+1
        else
            n=n-1
        end
    end

end
return n, R, d
end
cancer_sim(4)
```

#```julia
#function healthy_sim(n,genes,generations)
#Regular=.8
#Mut_1=.9
#Mut_2=.95
#for j in 1:generations
#    for i in 1:n
#        n=n+1
#    end
#end
#return n
#end
#healthy_sim(1,3,12)
#```